#!/usr/bin/env python3

import sys
import os
import signal
import heiko
from heiko.menu import user_menu, banner, login, show_help
from heiko.maassimpleconfig import MaasSimpleConfig
from heiko.nfc import nfc_init
from heiko.utils import log

# temp for annoying error msg
import urllib3
urllib3.disable_warnings()


def sigint_handler(signal, frame):
    print("\n")
    sys.exit(0)


def sigalrm_handler(signal, frame):
    log("\nAuto-logout timer triggered!")
    sys.exit(1)


signal.signal(signal.SIGINT, sigint_handler)
signal.signal(signal.SIGALRM, sigalrm_handler)

if __name__ == '__main__':

    cfg = MaasSimpleConfig().load('config.yml')
    conn_str = 'https://' + cfg.get_maas_host() + ':' + str(cfg.get_maas_server_port()) + cfg.get_maas_api_url_base_path()
    maas_cfg = heiko.MaaSConfig(conn_str, cfg.get_maas_verify_ssl_certificates())
    maas_builder = heiko.MaaSApiClientBuilder(maas_cfg)

    cfgobj = cfg.get_all()

    if cfgobj["nfc"]["enable"]:
        # Only enable NFC on the real matomat TTY, to avoid locking conflicts
        if os.ttyname(sys.stdout.fileno()) == "/dev/tty1":
            nfc_init()
        else:
            cfgobj["nfc"]["enable"] = False

    # This is the login loop.
    is_logged_in = False
    while is_logged_in is False:

        auth_client = maas_builder.build_auth_api_client()
        is_logged_in, auth = login(maas_builder, auth_client, cfgobj)

        if is_logged_in is False:
            continue

        if auth is not None:
            items_client = maas_builder.build_items_client(auth["token"])
            users_client = maas_builder.build_users_client(auth["token"])
            service_client = maas_builder.build_service_client(auth["token"])

        banner(auth)
        show_help(items_client, False, cfgobj)

        # When autenticated go to menu
        is_exit = False
        while is_exit is False:
            is_logged_in, is_exit = user_menu(auth, auth_client, items_client, users_client, service_client, cfgobj)
            # Cancel autologout timer:
            signal.alarm(0)
